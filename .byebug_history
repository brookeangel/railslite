c
@db
c
self.execute('SELECT * FROM cats')
self.execute('SELECT name FROM sqlite_master WHERE type="table"')
self.execute('.tables')
self.execute('tables')
self.execute('SELECT * FROM dogs')
self
db_file_name
@db
c
exit
e.backtrace[1]
File.read(e.backtrace[0])
e.backtrace[0]
e
n
e
n
@dog.attributes
@dog.owner_id
@dog.owner_id = 1
@dog.attributes
@dog.flavor = 'dalkfj'
@dog.attributes
@dog.name = 'char'
@dog.attributes
@dog
n
@dog
c
@dog.owner_id
@dog.name
@dog.methods
@dog.attributes
n
@dog.attributes
@dog.instance_variables
@dog.attributes
exit
@dog.methods
@dog.attributes
@dog.columns
@dog
Dog.columns
@dog.columns
@dog.instance_variables
@dog.attributes
@dog
n
@dog
exit
pattern.match(req.fullpath)
pattern.class
pattern
exit
cookie
req.params["form_authenticity_token"]
req.params
req.form_data?
req
req.post?
req.post>
req.patch?
route_params
res
route_params
cookie
n
exit
res["Set-cookie"]
res["Set-Cookie"]
req.inspect[98..150]
req.inspect[98]
req.inspect.index("form_authenticity_token")
req.inspect.index("form")
req.inspect.find("form")
req.inspect
req.to_s
req.cookies
req
route_params
cookie
exit
c
res["Set-Cookie"]
res
c
req.path
c
res["Set-Cookie"]
req.cookies
res
c
exit
res["Set-Cookie"]
c
res["Set-Cookie"]
c
res["Set-Cookie"]
c
res["Set-Cookie"]
res.cookies
res
exit
req.cookies
res["Set-Cookie"]
req.cookies
req
c
res["Set-Cookie"]
res.cookies
res
c
res
c
req.cookies
req
c
req.path
res["Set-Cookie"]
res
token
c
JSON.parse(req.cookies["_rails_lite_app"])
req.cookies["_rails_lite_app"]
req.cookies
res["Set-Cookie"]
res
c
res
c
res
c
res["Set-Cookie"]
ses["Set-Cookie"]
res
exit
req.env
env
res["Set-Cookie"]
res.header
res
res[@header]
res[@header["Set-Cookie"]]
res
c
exit
req
cookie
c
req
c
exit
req.cookies
req.cooies
req.params
req
req.cookies
req.body.inspect
req.body.inspect?
p req.body
req.body
req.header
req["rack.request.form_vars"]
req.cookies
req.path
req
res
c
res
exit
c
@auth_token
c
req.cookies
req
res
res.cookies
res
@auth_token
c
exit
req.cookies
req
cookie
c
cookie
exit
req.cookies
cookie
route_params
route_params["auth_token"]
cookie["form_authenticity_token"]
cookie
exit
session
session["form_authenticity_token"]
c
exit
res.body
res
c
res
c
res.body = file
res.body.last
res.body
res.boyd
res.write(file)
file
c
exit
res.body.last
res.body
exit
res.body
res
c
res
c
res
c
res
c
File.read(file_name)
file_name
c
exit
File.read(file_name)
file_name
filename
res['Content-type']
content-type
File.read(file_name)
res
c
exit
type
exit
c
file_found?(env)
exit
File.dirname(__FILE__)
File.exist?('../')
exit
File.dirname(__FILE__)
File.exist?("../public/corgi.jpg")
File.exist?(file_name)
file_name
exit
file_name(env)
file_name
c
n
